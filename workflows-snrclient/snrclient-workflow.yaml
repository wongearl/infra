apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: pr-snrclient
  namespace: default
spec:
  entrypoint: main
  arguments:
    parameters:
      - name: repo-url
        value: https://gh-proxy.com/github.com/wongearl/SonatypeNexusRepositoryClient.git
      - name: branch
        value: main
      - name: pr
        value: "-1"
      # the following parameters are required by hooks
      - name: owner
        value: wongeral
      - name: repo
        value: SonatypeNexusRepositoryClient
      - name: label
        value: SonatypeNexusRepositoryClient-build

  nodeSelector:
    topology.kubernetes.io/zone: beijing

  hooks:
    exit:
      templateRef:
        name: library
        template: status
        clusterScope: true
      expression: "{{workflow.parameters.pr}} >= 1"
    all:
      templateRef:
        name: library
        template: status
        clusterScope: true
      expression: "{{workflow.parameters.pr}} >= 1"
    notify:
      templateRef:
        name: library
        template: dingding
        clusterScope: true
      expression: workflow.status == "Succeeded" or workflow.status == "Failed" or workflow.status == "Error"

  templates:
  - name: main
    dag:
      tasks:
        - name: clone
          templateRef:
            name: library
            template: clone
            clusterScope: true
          arguments:
            parameters:
              - name: repo
                value: "{{workflow.parameters.repo-url}}"
              - name: branch
                value: "{{workflow.parameters.branch}}"
              - name: pr
                value: "{{workflow.parameters.pr}}"
        - name: go-test
          templateRef:
            name: library
            template: go-test
            clusterScope: true
          depends: clone
        - name: code-check
          template: code-check
          depends: clone
          arguments:
            parameters:
              - name: path
                value: "/work"
        - name: build-image
          template: build-image
          depends: clone
          arguments:
            parameters:
              - name: version
                value: "{{tasks.clone.outputs.parameters.version}}"

        - name: atomic
          templateRef:
            name: library
            template: atomic
            clusterScope: true

  - name: build-image
    inputs:
      parameters:
        - name: version
          default: ""
    steps:
    - - name: image
        templateRef:
          name: library
          template: image
          clusterScope: true
        arguments:
          parameters:
            - name: image
              value: library/{{item.name}}:{{inputs.parameters.version}}
            - name: dockerfile
              value: build/{{item.context}}
            - name: tag
              value: "{{inputs.parameters.version}}"
        withItems:
        - { name: 'snrclient', context: 'snrclient' }

  - name: code-check
    container:
      image: golang:1.20
      volumeMounts:
        - name: work
          mountPath: /work
      workingDir: /work
      env:
        - name: GOPROXY
          value: https://goproxy.cn,direct
        - name: GOSUMDB
          value: sum.golang.org
      command:
        - make
      args:
        - vet
        - fmt