# The webhook URL is: https://localhost:2746/api/v1/events/namespace/

apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: pr-workflow
  namespace: default
spec:
  entrypoint: main
  arguments:
    parameters:
      - name: repo
        value: git@https://github.com/wongearl/SonatypeNexusRepositoryClient.git
      - name: image
        value: surenpi/test
      - name: branch
        value: master
      - name: pr
        value: 1

  volumeClaimTemplates:
    - metadata:
        name: work
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 64Mi

  templates:
  - name: main
    dag:
      tasks:
        - name: clone
          template: clone
          arguments:
            parameters:
              - name: repo
                value: "{{workflow.parameters.repo}}"
              - name: branch
                value: "{{workflow.parameters.branch}}"
        - name: fetch
          template: fetch
          depends: "clone"
          arguments:
            parameters:
              - name: pr
                value: "{{workflow.parameters.pr}}"
        - name: checkout
          template: checkout
          depends: "fetch"
          arguments:
            parameters:
              - name: pr
                value: "{{workflow.parameters.pr}}"
        - name: build
          template: image
          depends: "checkout"
          arguments:
            parameters:
              - name: image
                value: "{{workflow.parameters.image}}"
              - name: path
                value: "/work"
  
  - name: clone
    inputs:
      parameters:
        - name: repo
        - name: branch
    volumes:
      - name: git-secret
        secret:
          defaultMode: 0400
          secretName: gitlab-secret
    container:
      volumeMounts:
        - mountPath: /work
          name: work
        - mountPath: /root/.ssh/
          name: git-secret
      image: alpine/git:v2.26.2
      workingDir: /work
      args:
        - clone
        - --depth
        - "1"
        - --branch
        - "{{inputs.parameters.branch}}"
        - --single-branch
        - "{{inputs.parameters.repo}}"
        - .
  - name: fetch
    depends: "clone"
    inputs:
      parameters:
        - name: pr
    volumes:
      - name: git-secret
        secret:
          defaultMode: 0400
          secretName: gitlab-secret
    container:
      volumeMounts:
        - mountPath: /work
          name: work
        - mountPath: /root/.ssh/
          name: git-secret
      image: alpine/git:v2.26.2
      workingDir: /work
      args:
        - fetch
        - origin
        - merge-requests/{{inputs.parameters.pr}}/head:mr-{{inputs.parameters.pr}}
  - name: checkout
    depends: "fetch"
    inputs:
      parameters:
        - name: pr
    volumes:
      - name: git-secret
        secret:
          defaultMode: 0400
          secretName: gitlab-secret
    container:
      volumeMounts:
        - mountPath: /work
          name: work
        - mountPath: /root/.ssh/
          name: git-secret
      image: alpine/git:v2.26.2
      workingDir: /work
      args:
        - checkout
        - mr-{{inputs.parameters.pr}}
  - name: image
    inputs:
      parameters:
        - name: image
        - name: path
    volumes:
      - name: docker-config
        secret:
          secretName: docker-config
      - name: cache
        hostPath:
          path: /mnt/data
          type: DirectoryOrCreate
        #persistentVolumeClaim:
        #  claimName: image-cache
    container:
      image: moby/buildkit:v0.9.3-rootless
      volumeMounts:
        - name: work
          mountPath: /work
        - name: docker-config
          mountPath: /.docker
        - name: cache
          mountPath: /cache
      workingDir: /work/
      securityContext:
        privileged: true
      env:
        - name: BUILDKITD_FLAGS
          value: --oci-worker-no-process-sandbox
        - name: DOCKER_CONFIG
          value: /.docker
      command:
        - buildctl-daemonless.sh
      args:
        - build
        - --frontend
        - dockerfile.v0
        - --local
        - context=.
        - --local
        - dockerfile=.
        - --output
        - type=image,name=docker.io/{{inputs.parameters.image}},push=true
